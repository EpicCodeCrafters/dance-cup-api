syntax = "proto3";

package ECC.DanceCup.Api.Presentation.Grpc;

option csharp_namespace = "ECC.DanceCup.Api.Presentation.Grpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service DanceCupApi {
    rpc GetDances (GetDancesRequest) returns (GetDancesResponse);
    rpc GetReferees (GetRefereesRequest) returns (GetRefereesResponse);

    rpc CreateReferee (CreateRefereeRequest) returns (CreateRefereeResponse);
    
    rpc CreateTournament (CreateTournamentRequest) returns (CreateTournamentResponse);
    rpc StartTournamentRegistration (StartTournamentRegistrationRequest) returns (StartTournamentRegistrationResponse);
    rpc FinishTournamentRegistration (FinishTournamentRegistrationRequest) returns (FinishTournamentRegistrationResponse);
    rpc ReopenTournamentRegistration (ReopenTournamentRegistrationRequest) returns (ReopenTournamentRegistrationResponse);
}

message GetDancesRequest { }

message GetDancesResponse {
    repeated Dance dances = 1;
}

message Dance {
    int64 id = 1;
    string short_name = 2;
    string name = 3;
}

message GetRefereesRequest {
    google.protobuf.StringValue referee_full_name = 1;
    int32 page_number = 2;
    int32 page_size = 3;
}

message GetRefereesResponse {
    repeated Referee referees = 1;
}

message Referee {
    int64 id = 1;
    string full_name = 2;
}

message CreateRefereeRequest {
    string full_name = 1;
}

message CreateRefereeResponse {
    int64 referee_id = 1;
}

message CreateTournamentRequest {
    int64 user_id = 1;
    string name = 2;
    string description = 3;
    google.protobuf.Timestamp date = 4;
    repeated CreateCategoryModel create_category_models = 5;
}
        
message CreateTournamentResponse {
    int64 tournament_id = 1;
}

message CreateCategoryModel {
    string name = 1;
    repeated int64 dances_ids = 2;
    repeated int64 referees_ids = 3;
}

message StartTournamentRegistrationRequest {
    int64 tournament_id = 1;
}

message StartTournamentRegistrationResponse { }

message FinishTournamentRegistrationRequest {
    int64 tournament_id = 1;
}

message FinishTournamentRegistrationResponse { }

message ReopenTournamentRegistrationRequest {
    int64 tournament_id = 1;
}

message ReopenTournamentRegistrationResponse { }