services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  kafka-init:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - kafka
    entrypoint: [ "sh", "-c", "sleep 10 && kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic dance_cup_events && echo 'Топик создан'" ]

  dance-cup-api-db:
    container_name: dance-cup-api-db
    image: postgres
    ports:
      - 15432:5432
    environment:
      POSTGRES_USER: postgres-user
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dance-cup-api
      PGDATA: /data/postgres
    command: -c log_statement=all
    volumes:
      - dance-cup-api-db-volume:/data/postgres

volumes:
  dance-cup-api-db-volume: